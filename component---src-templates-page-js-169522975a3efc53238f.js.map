{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/components/layout/Breadcrumbs.js","webpack:///./src/templates/page.js"],"names":["card_Card","render","_this$props$card","this","props","card","title","url","description","image","react_default","a","createElement","href","className","target","rel","gatsby_image_default","fluid","childImageSharp","alt","Component","propTypes","prop_types","shape","string","isRequired","object","u","d","t","p","E","f","v","n","N","layout_Breadcrumbs","gatsby_browser_entry","to","react_fontawesome_default","icon","index_es","react","Template","_ref","pages","data","linksJson","layout","Hero","lead","links","map","node","key","pageQuery"],"mappings":"+JAKMA,4FAUJC,kBAAS,IAAAC,EACoCC,KAAKC,MAAMC,KAA9CC,EADDJ,EACCI,MAAOC,EADRL,EACQK,IAAKC,EADbN,EACaM,YAAaC,EAD1BP,EAC0BO,MAEjC,OACEC,EAAAC,EAAAC,cAAA,KACAC,KAAMN,EACNO,UAAU,OACVC,OAAO,SACPC,IAAI,uBAEJN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAACK,EAAAN,GAAIO,MAAOT,EAAMU,gBAAgBD,MAAOE,IAAI,GAAGN,UAAU,gBAG1DJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UACGN,GAEHI,EAAAC,EAAAC,cAAA,SACGJ,QA7BLR,CAAaU,EAAAC,EAAMU,WAAnBrB,EACGsB,WACLjB,KAAMkB,EAAAC,OACJlB,MAAOiB,EAAAE,OAAiBC,WACxBnB,IAAKgB,EAAAE,OAAiBC,WACtBlB,YAAae,EAAAE,OAAiBC,WAC9BjB,MAAOc,EAAAI,SACND,YA+BP,IAAArB,EAAAuB,EAAAC,EAAAC,EAAA,KAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,KAAAG,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KCzBAO,4FAXEpC,kBACE,OACES,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAC0B,EAAA3B,GAAKG,UAAU,QAAQyB,GAAG,KAA3B,4BAA8D7B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,IAAyBJ,EAAAC,EAAAC,cAAC4B,EAAA7B,GAAgB8B,KAAMC,EAAA/B,IAAhD,KAAwED,EAAAC,EAAAC,cAAA,QAAME,UAAU,6BAA6BX,KAAKC,MAAME,YAOxM+B,CAZ0BM,EAAAtB,WCEX,SAASuB,EAATC,GAA0B,IACrBC,EADqBD,EAAPE,KACzBC,UAEP,OACEtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,KACAD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAAvC,GAAKL,MAAOwC,EAAMxC,QACnBI,EAAAC,EAAAC,cAACyB,GAAY/B,MAAOwC,EAAMxC,QAC1BI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQgC,EAAMK,MACzBzC,EAAAC,EAAAC,cAAA,UACGkC,EAAMM,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACf7C,EAAAC,EAAAC,cAAA,MAAI2C,IAAKA,EACPzC,UAAW,aACTyC,EAAI,GAAG,GAAM,EAAI,SAAU,IAAM,cACjCA,EAAI,GAAG,GAAM,EAAI,SAAU,IAAM,WAAYA,GAE/C7C,EAAAC,EAAAC,cAACP,GACDA,KAAMiD,0FAYf,IAAME","file":"component---src-templates-page-js-169522975a3efc53238f.js","sourcesContent":["import * as PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Img from \"gatsby-image\";\nimport { graphql } from 'gatsby';\n\nclass Card extends React.Component {\n  static propTypes = {\n    card: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      image: PropTypes.object,\n    }).isRequired,\n  }\n\n  render() {\n    const { title, url, description, image } = this.props.card\n\n    return (\n      <a\n      href={url}\n      className=\"card\"\n      target=\"_blank\" \n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"card-context\">\n      <Img fluid={image.childImageSharp.fluid} alt=\"\" className=\"card-image\" />\n      </div>\n\n      <div className=\"card-lens\">\n        <h2>\n          {title}\n        </h2>\n        <p>\n          {description}\n        </p>\n      </div>\n\n    </a>\n    )\n  }\n}\n\nexport default Card\n\nexport const CardFragment = graphql`\n  fragment Card_details on LinksJson {\n    links {\n      title\n      url\n      description\n      image {\n        childImageSharp {\n          fluid(maxWidth: 384, maxHeight: 200) {\n            ...GatsbyImageSharpFluid_noBase64\n          }\n        }\n      }\n    }\n  }\n`\n","import React, {Component} from 'react';\nimport { Link } from \"gatsby\";\n\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport {faAngleRight} from '@fortawesome/fontawesome-pro-light';\n\nclass Breadcrumbs extends Component {\n  render() {\n    return (\n      <div className=\"breadcrumbs\">\n        <div className=\"contain\">\n          <Link className=\"crumb\" to=\"/\">Cryptocurrency Resources</Link><span className=\"crumb\"> <FontAwesomeIcon icon={faAngleRight} /> </span><span className=\"active-crumb crumb nowrap\">{this.props.title}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Card from \"../components/card\";\n\nimport Layout from \"../components/layout\";\nimport Hero from '../components/layout/Hero';\nimport Breadcrumbs from '../components/layout/Breadcrumbs';\n\nexport default function Template({data}) {\n  const {linksJson: pages} = data;\n\n  return (\n    <Layout>\n    <div>\n      <Hero title={pages.title} />\n      <Breadcrumbs title={pages.title} />\n      <div className=\"main\">\n        <div className=\"contain\">\n        <p className=\"lead\">{pages.lead}</p>\n          <ul>\n            {pages.links.map((node, key) => (\n              <li key={key}\n                className={\"col-md-6\"+ \n                ((key+1)%2 === 0 ? '--last': '') + \" col-lg-4\" + \n                ((key+1)%3 === 0 ? '--last': '') + \" button-\" +key\n              }>\n                <Card\n                card={node}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n    </Layout>\n  )\n};\n\nexport const pageQuery = graphql`\n  query PageByPath($path: String!) {\n    linksJson (page: {eq :$path}) {\n      page\n      title\n      lead\n      ...Card_details\n    }\n  }\n`"],"sourceRoot":""}