{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/components/layout/Breadcrumbs.js","webpack:///./src/templates/page.js"],"names":["card_Card","Card","_React$Component","call","this","render","_this$props$card","props","card","title","url","description","small","image","childImageSharp","fluid","react_default","a","createElement","href","className","target","src","srcSet","sizes","alt","Component","propTypes","prop_types","shape","string","isRequired","object","m","o","d","p","n","E","layout_Breadcrumbs","Breadcrumbs","_Component","gatsby_browser_entry","to","react_fontawesome_default","icon","index_es","react","Template","_ref","pages","data","linksJson","Hero","lead","links","map","node","key","pageQuery"],"mappings":"wKAKMA,cAUJ,SAAAC,IAAc,OACZC,EAAAC,KAAAC,OADYA,iCAIdC,kBAAS,IAAAC,EACoCF,KAAKG,MAAMC,KAA9CC,EADDH,EACCG,MAAOC,EADRJ,EACQI,IAAKC,EADbL,EACaK,YACZC,EAFDN,EAC0BO,MACTC,gBAAgBC,MAAhCH,MAER,OACEI,EAAAC,EAAAC,cAAA,KACAC,KAAMT,EACNU,UAAU,OACVC,OAAO,UAEPL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,OACEI,IAAKV,EAAMU,IACXC,OAAQX,EAAMW,OACdC,MAAM,2BAENC,IAAI,MAINT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UACGT,GAEHO,EAAAC,EAAAC,cAAA,SACGP,QAvCLX,CAAagB,EAAAC,EAAMS,WAAnB1B,EACG2B,WACLnB,KAAMoB,EAAAC,OACJpB,MAAOmB,EAAAE,OAAiBC,WACxBrB,IAAKkB,EAAAE,OAAiBC,WACtBpB,YAAaiB,EAAAE,OAAiBC,WAC9BlB,MAAOe,EAAAI,SACND,YAyCP,IAAAvB,EAAAyB,EAAAC,GAAAjB,EAAA,KAAAA,EAAA,MAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAoB,EAAAF,GAAAG,EAAArB,EAAA,KC9BAsB,cAfE,SAAAC,EAAYjC,GAAO,OACjBkC,EAAAtC,KAAAC,KAAMG,IADWH,iCAInBC,kBACE,OACEW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACwB,EAAAzB,GAAKG,UAAU,QAAQuB,GAAG,KAA3B,4BAA8D3B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,IAAyBJ,EAAAC,EAAAC,cAAC0B,EAAA3B,GAAgB4B,KAAMC,EAAA7B,IAAhD,KAAwED,EAAAC,EAAAC,cAAA,QAAME,UAAU,6BAA6BhB,KAAKG,MAAME,YAOxM8B,CAjB0BQ,EAAArB,WCIX,SAASsB,EAATC,GAA0B,IACrBC,EADqBD,EAAPE,KACzBC,UAEP,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAApC,GAAKR,MAAOyC,EAAMzC,QACnBO,EAAAC,EAAAC,cAACqB,GAAY9B,MAAOyC,EAAMzC,QAC1BO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQ8B,EAAMI,MACzBtC,EAAAC,EAAAC,cAAA,UACGgC,EAAMK,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACf1C,EAAAC,EAAAC,cAAA,MAAIwC,IAAKA,EACPtC,UAAW,aACTsC,EAAI,GAAG,GAAK,EAAI,SAAU,IAAM,cAChCA,EAAI,GAAG,GAAK,EAAI,SAAU,IAAM,WAAYA,GAE9C1C,EAAAC,EAAAC,cAACV,GACDA,KAAMiD,yFAWf,IAAME","file":"component---src-templates-page-js-3505a0b262d72e7682d9.js","sourcesContent":["import * as PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\";\nimport { graphql } from 'gatsby';\n\nclass Card extends React.Component {\n  static propTypes = {\n    card: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      image: PropTypes.object,\n    }).isRequired,\n  }\n  \n  constructor() {\n    super()\n  }\n\n  render() {\n    const { title, url, description, image } = this.props.card\n    const { small } = image.childImageSharp.fluid\n\n    return (\n      <a\n      href={url}\n      className=\"card\"\n      target=\"_blank\" \n    >\n      <div className=\"card-context\">\n      <img\n        src={small.src}\n        srcSet={small.srcSet}\n        sizes=\"(min-width: 960px) 384px\" \n\n        alt=\"\" \n      />\n      </div>\n\n      <div className=\"card-lens\">\n        <h2>\n          {title}\n        </h2>\n        <p>\n          {description}\n        </p>\n      </div>\n\n    </a>\n    )\n  }\n}\n\nexport default Card\n\nexport const CardFragment = graphql`\n  fragment Card_details on LinksJson {\n    links {\n      title\n      url\n      description\n      image {\n        childImageSharp {\n          fluid(maxWidth: 384, maxHeight: 200) {\n            ...GatsbyImageSharpFluid_noBase64\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React, {Component} from 'react';\nimport { Link } from \"gatsby\";\n\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport {faAngleRight} from '@fortawesome/fontawesome-pro-light';\n\nclass Breadcrumbs extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"breadcrumbs\">\n        <div className=\"contain\">\n          <Link className=\"crumb\" to=\"/\">Cryptocurrency Resources</Link><span className=\"crumb\"> <FontAwesomeIcon icon={faAngleRight} /> </span><span className=\"active-crumb crumb nowrap\">{this.props.title}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from \"gatsby\";\nimport { graphql } from 'gatsby';\nimport Card from \"../components/card\";\n\nimport Layout from \"../components/layout\";\nimport Hero from '../components/layout/Hero';\nimport Breadcrumbs from '../components/layout/Breadcrumbs';\n\nexport default function Template({data}) {\n  const {linksJson: pages} = data;\n\n  return (\n    <div>\n      <Hero title={pages.title} />\n      <Breadcrumbs title={pages.title} />\n      <div className=\"main\">\n        <div className=\"contain\">\n        <p className=\"lead\">{pages.lead}</p>\n          <ul>\n            {pages.links.map((node, key) => (\n              <li key={key}\n                className={\"col-md-6\"+ \n                ((key+1)%2 == 0 ? '--last': '') + \" col-lg-4\" + \n                ((key+1)%3 == 0 ? '--last': '') + \" button-\" +key\n              }>\n                <Card\n                card={node}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport const pageQuery = graphql`\n  query PageByPath($path: String!) {\n    linksJson (page: {eq :$path}) {\n      page\n      title\n      lead\n      ...Card_details\n    }\n  }\n`"],"sourceRoot":""}