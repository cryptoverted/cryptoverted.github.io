{"version":3,"sources":["webpack://cryptoverted/./node_modules/camelcase/index.js","webpack://cryptoverted/./node_modules/common-tags/es/TemplateTag/TemplateTag.js","webpack://cryptoverted/./node_modules/common-tags/es/inlineArrayTransformer/inlineArrayTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/stripIndentTransformer/stripIndentTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/trimResultTransformer/trimResultTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/splitStringTransformer/splitStringTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/commaLists/commaLists.js","webpack://cryptoverted/./node_modules/common-tags/es/commaListsAnd/commaListsAnd.js","webpack://cryptoverted/./node_modules/common-tags/es/commaListsOr/commaListsOr.js","webpack://cryptoverted/./node_modules/common-tags/es/removeNonPrintingValuesTransformer/removeNonPrintingValuesTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/replaceSubstitutionTransformer/replaceSubstitutionTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/html/html.js","webpack://cryptoverted/./node_modules/common-tags/es/replaceResultTransformer/replaceResultTransformer.js","webpack://cryptoverted/./node_modules/common-tags/es/safeHtml/safeHtml.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLine/oneLine.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLineTrim/oneLineTrim.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLineCommaLists/oneLineCommaLists.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLineCommaListsOr/oneLineCommaListsOr.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLineCommaListsAnd/oneLineCommaListsAnd.js","webpack://cryptoverted/./node_modules/common-tags/es/inlineLists/inlineLists.js","webpack://cryptoverted/./node_modules/common-tags/es/oneLineInlineLists/oneLineInlineLists.js","webpack://cryptoverted/./node_modules/common-tags/es/stripIndent/stripIndent.js","webpack://cryptoverted/./node_modules/common-tags/es/stripIndents/stripIndents.js","webpack://cryptoverted/./node_modules/domhandler/lib/node.js","webpack://cryptoverted/./node_modules/html-dom-parser/lib/client/constants.js","webpack://cryptoverted/./node_modules/html-dom-parser/lib/client/domparser.js","webpack://cryptoverted/./node_modules/html-dom-parser/lib/client/html-to-dom.js","webpack://cryptoverted/./node_modules/html-dom-parser/lib/client/utilities.js","webpack://cryptoverted/./node_modules/html-react-parser/index.js","webpack://cryptoverted/./node_modules/html-react-parser/lib/attributes-to-props.js","webpack://cryptoverted/./node_modules/html-react-parser/lib/dom-to-react.js","webpack://cryptoverted/./node_modules/html-react-parser/lib/utilities.js","webpack://cryptoverted/./node_modules/inline-style-parser/index.js","webpack://cryptoverted/./node_modules/react-property/index.js","webpack://cryptoverted/./node_modules/react-property/lib/HTMLDOMPropertyConfig.js","webpack://cryptoverted/./node_modules/react-property/lib/SVGDOMPropertyConfig.js","webpack://cryptoverted/./node_modules/react-property/lib/injection.js","webpack://cryptoverted/./node_modules/style-to-js/cjs/index.js","webpack://cryptoverted/./node_modules/style-to-js/cjs/utilities.js","webpack://cryptoverted/./node_modules/style-to-object/index.js","webpack://cryptoverted/../src/image-utils.ts","webpack://cryptoverted/../src/components/hooks.ts","webpack://cryptoverted/../src/components/layout-wrapper.tsx","webpack://cryptoverted/../src/components/picture.tsx","webpack://cryptoverted/../src/components/placeholder.tsx","webpack://cryptoverted/../src/components/main-image.tsx","webpack://cryptoverted/../src/components/gatsby-image.server.tsx","webpack://cryptoverted/../src/components/gatsby-image.browser.tsx","webpack://cryptoverted/../src/components/static-image.server.tsx","webpack://cryptoverted/../src/components/static-image.tsx","webpack://cryptoverted/./src/components/button.js","webpack://cryptoverted/./node_modules/html-react-parser/index.mjs","webpack://cryptoverted/./src/components/card.js","webpack://cryptoverted/./src/templates/page.js"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","default","strings","raw","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_templateObject","freeze","value","_classCallCheck","instance","TemplateTag","_this","this","_len","arguments","transformers","_key","tag","_len2","expressions","_key2","interimTag","bind","transformEndResult","transformString","reduce","processSubstitutions","transformer","previousTag","template","_len3","substitutions","_key3","apply","undefined","concat","resultSoFar","remainingPart","substitution","transformSubstitution","shift","str","res","transform","onString","onSubstitution","endResult","onEndResult","defaults","separator","conjunction","serial","opts","arrayLength","indent","match","separatorIndex","lastIndexOf","_toConsumableArray","arr","arr2","from","type","Math","min","el","regexp","RegExp","Error","side","splitBy","includes","split","isValidValue","Number","isNaN","replaceWhat","replaceWith","toString","_extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","__assign","t","s","n","cloneNode","Element","Document","NodeWithChildren","ProcessingInstruction","Comment","Text","DataNode","Node","nodeTypes","Map","parent","prev","next","startIndex","endIndex","get","_a","set","recursive","_super","data","name","children","attribs","keys","_b","namespace","prefix","node","result","instr","elem","cloneChildren","clone_1","forEach","child","clone_2","doc","clone_3","childs","CASE_SENSITIVE_TAG_NAMES","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","parseFromDocument","parseFromString","window","DOMParser","domParser","html","tagName","document","implementation","isIE","createHTMLDocument","documentElement","getElementsByTagName","innerHTML","parseFromTemplate","createElement","content","childNodes","firstTagName","element","elements","parentNode","removeChild","domparser","formatDOM","DIRECTIVE_REGEX","directive","constants","domhandler","caseSensitiveTagNamesMap","len","formatAttributes","attributes","attribute","formatTagName","caseSensitiveTagName","getCaseSensitiveTagName","nodes","index","current","nodeType","nodeName","nodeValue","push","substring","indexOf","unshift","navigator","userAgent","domToReact","attributesToProps","htmlToDOM","domParserOptions","lowerCaseAttributeNames","HTMLReactParser","htmlparser2","reactProperty","utilities","setStyleProp","htmlProperties","svgProperties","svg","isCustomAttribute","attributeName","attributeNameLowerCased","attributeValue","property","propertyName","hasBooleanValue","hasOverloadedBooleanValue","PRESERVE_CUSTOM_ATTRIBUTES","style","React","skipAttributesToProps","isCustomComponent","replaceElement","library","cloneElement","isValidElement","hasReplace","dangerouslySetInnerHTML","__html","defaultValue","styleToJS","styleToJSOptions","reactCompat","version","invertObject","obj","override","isOverridePresent","overrides","is","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","column","updatePosition","lines","position","start","line","Position","whitespace","end","source","errorsList","error","msg","err","reason","filename","silent","re","exec","comments","rules","c","comment","pos","declaration","prop","val","ret","decl","decls","declarations","HTMLDOMPropertyConfig","SVGDOMPropertyConfig","injection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","checkMask","bitmask","injectDOMPropertyConfig","domPropertyConfig","config","isSVG","propConfig","Properties","DOMAttributeNames","mustUseProperty","hasNumericValue","hasPositiveNumericValue","properties","autoFocus","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","as","async","autoComplete","autoPlay","capture","cellPadding","cellSpacing","charSet","challenge","checked","cite","classID","className","cols","colSpan","contentEditable","contextMenu","controls","controlsList","coords","crossOrigin","dateTime","defer","dir","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","id","inputMode","integrity","keyParams","keyType","kind","label","lang","list","loop","low","manifest","marginHeight","marginWidth","max","maxLength","media","mediaGroup","method","minLength","multiple","muted","nonce","noValidate","open","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","readOnly","referrerPolicy","rel","required","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","step","summary","tabIndex","title","useMap","width","wmode","wrap","about","datatype","inlist","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","color","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fill","fillOpacity","fillRule","filterRes","filterUnits","floodColor","floodOpacity","focusable","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","format","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","offset","opacity","operator","order","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","strokeWidth","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","to","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","values","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","x1","x2","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","y","y1","y2","yChannelSelector","z","zoomAndPan","__importDefault","mod","__esModule","style_to_object_1","utilities_1","output","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","capitalize","trimHyphen","skipCamelCase","parse","iterator","hasIterator","imageCache","Set","hasNativeLazyLoadSupport","HTMLImageElement","gatsbyImageIsInstalled","GATSBY___IMAGE","storeImageloaded","cacheKey","add","hasImageLoaded","has","getMainProps","isLoading","isLoaded","images","loading","toggleLoaded","ref","dataset","objectFit","objectPosition","objectFitPolyfill","import","e","left","top","transition","willChange","shouldLoad","data-main-image","onLoad","currentTarget","img","Image","currentSrc","decode","then","getPlaceholderProps","layout","backgroundColor","wrapperStyle","bottom","right","aria-hidden","data-placeholder-image","Sizer","paddingTop","maxWidth","LayoutWrapper","Fragment","innerRef","decoding","Picture","forwardRef","fallback","sources","fallbackImage","propTypes","PropTypes","displayName","Placeholder","propName","componentName","MainImage","altValidator","image","GatsbyImageHydrator","_this2","createRef","state","_lazyHydrate","hasSSRHtml","root","querySelector","hydrated","Promise","resolve","_this3","lazyHydrator","lazyHydrate","toggleIsLoaded","setState","forceRender","_setupIntersectionObserver","useCache","intersectionObserver","createIntersectionObserver","_this4","JSON","stringify","onStartLoad","wasCached","unobserveRef","shouldComponentUpdate","nextProps","nextState","hasChanged","render","_this5","componentDidMount","ssrElement","complete","addEventListener","removeEventListener","componentWillUnmount","Type","data-gatsby-image-wrapper","wStyle","wClass","wrapperProps","sizer","suppressHydrationWarning","Component","GatsbyImage","warn","console","propsKey","checkDimensionProps","validLayouts","StaticImage","GatsbyImageBrowser","imageData","__imageData","__error","url","showPill","card","description","pills","pill","lens","G","childImageSharp","gatsbyImageData","faChevronCircleRight","faLongArrowAltRight","Template","desc","pages","linksJson","categories","allLinksJson","page","Helmet","meta","lead","link","data-goatcounter","Breadcrumbs","links","edges","iconPrefix","faCircle","fab","fas"],"mappings":"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","file":"component---src-templates-page-js-39c320ab55a749a75a4d.js","sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _templateObject = _taggedTemplateLiteral(['', ''], ['', '']);\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @class TemplateTag\n * @classdesc Consumes a pipeline of composable transformer plugins and produces a template tag.\n */\n\n\nvar TemplateTag = function () {\n  /**\n   * constructs a template tag\n   * @constructs TemplateTag\n   * @param  {...Object} [...transformers] - an array or arguments list of transformers\n   * @return {Function}                    - a template tag\n   */\n  function TemplateTag() {\n    var _this = this;\n\n    for (var _len = arguments.length, transformers = Array(_len), _key = 0; _key < _len; _key++) {\n      transformers[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, TemplateTag);\n\n    this.tag = function (strings) {\n      for (var _len2 = arguments.length, expressions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        expressions[_key2 - 1] = arguments[_key2];\n      }\n\n      if (typeof strings === 'function') {\n        // if the first argument passed is a function, assume it is a template tag and return\n        // an intermediary tag that processes the template using the aforementioned tag, passing the\n        // result to our tag\n        return _this.interimTag.bind(_this, strings);\n      }\n\n      if (typeof strings === 'string') {\n        // if the first argument passed is a string, just transform it\n        return _this.transformEndResult(strings);\n      } // else, return a transformed end result of processing the template with our tag\n\n\n      strings = strings.map(_this.transformString.bind(_this));\n      return _this.transformEndResult(strings.reduce(_this.processSubstitutions.bind(_this, expressions)));\n    }; // if first argument is an array, extrude it as a list of transformers\n\n\n    if (transformers.length > 0 && Array.isArray(transformers[0])) {\n      transformers = transformers[0];\n    } // if any transformers are functions, this means they are not initiated - automatically initiate them\n\n\n    this.transformers = transformers.map(function (transformer) {\n      return typeof transformer === 'function' ? transformer() : transformer;\n    }); // return an ES2015 template tag\n\n    return this.tag;\n  }\n  /**\n   * Applies all transformers to a template literal tagged with this method.\n   * If a function is passed as the first argument, assumes the function is a template tag\n   * and applies it to the template, returning a template tag.\n   * @param  {(Function|String|Array<String>)} strings        - Either a template tag or an array containing template strings separated by identifier\n   * @param  {...*}                            ...expressions - Optional list of substitution values.\n   * @return {(String|Function)}                              - Either an intermediary tag function or the results of processing the template.\n   */\n\n\n  _createClass(TemplateTag, [{\n    key: 'interimTag',\n\n    /**\n     * An intermediary template tag that receives a template tag and passes the result of calling the template with the received\n     * template tag to our own template tag.\n     * @param  {Function}        nextTag          - the received template tag\n     * @param  {Array<String>}   template         - the template to process\n     * @param  {...*}            ...substitutions - `substitutions` is an array of all substitutions in the template\n     * @return {*}                                - the final processed value\n     */\n    value: function interimTag(previousTag, template) {\n      for (var _len3 = arguments.length, substitutions = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        substitutions[_key3 - 2] = arguments[_key3];\n      }\n\n      return this.tag(_templateObject, previousTag.apply(undefined, [template].concat(substitutions)));\n    }\n    /**\n     * Performs bulk processing on the tagged template, transforming each substitution and then\n     * concatenating the resulting values into a string.\n     * @param  {Array<*>} substitutions - an array of all remaining substitutions present in this template\n     * @param  {String}   resultSoFar   - this iteration's result string so far\n     * @param  {String}   remainingPart - the template chunk after the current substitution\n     * @return {String}                 - the result of joining this iteration's processed substitution with the result\n     */\n\n  }, {\n    key: 'processSubstitutions',\n    value: function processSubstitutions(substitutions, resultSoFar, remainingPart) {\n      var substitution = this.transformSubstitution(substitutions.shift(), resultSoFar);\n      return ''.concat(resultSoFar, substitution, remainingPart);\n    }\n    /**\n     * Iterate through each transformer, applying the transformer's `onString` method to the template\n     * strings before all substitutions are processed.\n     * @param {String}  str - The input string\n     * @return {String}     - The final results of processing each transformer\n     */\n\n  }, {\n    key: 'transformString',\n    value: function transformString(str) {\n      var cb = function cb(res, transform) {\n        return transform.onString ? transform.onString(res) : res;\n      };\n\n      return this.transformers.reduce(cb, str);\n    }\n    /**\n     * When a substitution is encountered, iterates through each transformer and applies the transformer's\n     * `onSubstitution` method to the substitution.\n     * @param  {*}      substitution - The current substitution\n     * @param  {String} resultSoFar  - The result up to and excluding this substitution.\n     * @return {*}                   - The final result of applying all substitution transformations.\n     */\n\n  }, {\n    key: 'transformSubstitution',\n    value: function transformSubstitution(substitution, resultSoFar) {\n      var cb = function cb(res, transform) {\n        return transform.onSubstitution ? transform.onSubstitution(res, resultSoFar) : res;\n      };\n\n      return this.transformers.reduce(cb, substitution);\n    }\n    /**\n     * Iterates through each transformer, applying the transformer's `onEndResult` method to the\n     * template literal after all substitutions have finished processing.\n     * @param  {String} endResult - The processed template, just before it is returned from the tag\n     * @return {String}           - The final results of processing each transformer\n     */\n\n  }, {\n    key: 'transformEndResult',\n    value: function transformEndResult(endResult) {\n      var cb = function cb(res, transform) {\n        return transform.onEndResult ? transform.onEndResult(res) : res;\n      };\n\n      return this.transformers.reduce(cb, endResult);\n    }\n  }]);\n\n  return TemplateTag;\n}();\n\nexport default TemplateTag;","var defaults = {\n  separator: '',\n  conjunction: '',\n  serial: false\n};\n/**\n * Converts an array substitution to a string containing a list\n * @param  {String} [opts.separator = ''] - the character that separates each item\n * @param  {String} [opts.conjunction = '']  - replace the last separator with this\n * @param  {Boolean} [opts.serial = false] - include the separator before the conjunction? (Oxford comma use-case)\n *\n * @return {Object}                     - a TemplateTag transformer\n */\n\nvar inlineArrayTransformer = function inlineArrayTransformer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults;\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      // only operate on arrays\n      if (Array.isArray(substitution)) {\n        var arrayLength = substitution.length;\n        var separator = opts.separator;\n        var conjunction = opts.conjunction;\n        var serial = opts.serial; // join each item in the array into a string where each item is separated by separator\n        // be sure to maintain indentation\n\n        var indent = resultSoFar.match(/(\\n?[^\\S\\n]+)$/);\n\n        if (indent) {\n          substitution = substitution.join(separator + indent[1]);\n        } else {\n          substitution = substitution.join(separator + ' ');\n        } // if conjunction is set, replace the last separator with conjunction, but only if there is more than one substitution\n\n\n        if (conjunction && arrayLength > 1) {\n          var separatorIndex = substitution.lastIndexOf(separator);\n          substitution = substitution.slice(0, separatorIndex) + (serial ? separator : '') + ' ' + conjunction + substitution.slice(separatorIndex + 1);\n        }\n      }\n\n      return substitution;\n    }\n  };\n};\n\nexport default inlineArrayTransformer;","function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * strips indentation from a template literal\n * @param  {String} type = 'initial' - whether to remove all indentation or just leading indentation. can be 'all' or 'initial'\n * @return {Object}                  - a TemplateTag transformer\n */\n\n\nvar stripIndentTransformer = function stripIndentTransformer() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (type === 'initial') {\n        // remove the shortest leading indentation from each line\n        var match = endResult.match(/^[^\\S\\n]*(?=\\S)/gm);\n        var indent = match && Math.min.apply(Math, _toConsumableArray(match.map(function (el) {\n          return el.length;\n        })));\n\n        if (indent) {\n          var regexp = new RegExp('^.{' + indent + '}', 'gm');\n          return endResult.replace(regexp, '');\n        }\n\n        return endResult;\n      }\n\n      if (type === 'all') {\n        // remove all indentation from each line\n        return endResult.replace(/^[^\\S\\n]+/gm, '');\n      }\n\n      throw new Error('Unknown type: ' + type);\n    }\n  };\n};\n\nexport default stripIndentTransformer;","/**\n * TemplateTag transformer that trims whitespace on the end result of a tagged template\n * @param  {String} side = '' - The side of the string to trim. Can be 'start' or 'end' (alternatively 'left' or 'right')\n * @return {Object}           - a TemplateTag transformer\n */\nvar trimResultTransformer = function trimResultTransformer() {\n  var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (side === '') {\n        return endResult.trim();\n      }\n\n      side = side.toLowerCase();\n\n      if (side === 'start' || side === 'left') {\n        return endResult.replace(/^\\s*/, '');\n      }\n\n      if (side === 'end' || side === 'right') {\n        return endResult.replace(/\\s*$/, '');\n      }\n\n      throw new Error('Side not supported: ' + side);\n    }\n  };\n};\n\nexport default trimResultTransformer;","var splitStringTransformer = function splitStringTransformer(splitBy) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (splitBy != null && typeof splitBy === 'string') {\n        if (typeof substitution === 'string' && substitution.includes(splitBy)) {\n          substitution = substitution.split(splitBy);\n        }\n      } else {\n        throw new Error('You need to specify a string character to split by.');\n      }\n\n      return substitution;\n    }\n  };\n};\n\nexport default splitStringTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsOr;","var isValidValue = function isValidValue(x) {\n  return x != null && !Number.isNaN(x) && typeof x !== 'boolean';\n};\n\nvar removeNonPrintingValuesTransformer = function removeNonPrintingValuesTransformer() {\n  return {\n    onSubstitution: function onSubstitution(substitution) {\n      if (Array.isArray(substitution)) {\n        return substitution.filter(isValidValue);\n      }\n\n      if (isValidValue(substitution)) {\n        return substitution;\n      }\n\n      return '';\n    }\n  };\n};\n\nexport default removeNonPrintingValuesTransformer;","var replaceSubstitutionTransformer = function replaceSubstitutionTransformer(replaceWhat, replaceWith) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceSubstitutionTransformer requires at least 2 arguments.');\n      } // Do not touch if null or undefined\n\n\n      if (substitution == null) {\n        return substitution;\n      } else {\n        return substitution.toString().replace(replaceWhat, replaceWith);\n      }\n    }\n  };\n};\n\nexport default replaceSubstitutionTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport removeNonPrintingValuesTransformer from '../removeNonPrintingValuesTransformer';\nvar html = new TemplateTag(splitStringTransformer('\\n'), removeNonPrintingValuesTransformer, inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default html;","/**\n * Replaces tabs, newlines and spaces with the chosen value when they occur in sequences\n * @param  {(String|RegExp)} replaceWhat - the value or pattern that should be replaced\n * @param  {*}               replaceWith - the replacement value\n * @return {Object}                      - a TemplateTag transformer\n */\nvar replaceResultTransformer = function replaceResultTransformer(replaceWhat, replaceWith) {\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceResultTransformer requires at least 2 arguments.');\n      }\n\n      return endResult.replace(replaceWhat, replaceWith);\n    }\n  };\n};\n\nexport default replaceResultTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport replaceSubstitutionTransformer from '../replaceSubstitutionTransformer';\nvar safeHtml = new TemplateTag(splitStringTransformer('\\n'), inlineArrayTransformer, stripIndentTransformer, trimResultTransformer, replaceSubstitutionTransformer(/&/g, '&amp;'), replaceSubstitutionTransformer(/</g, '&lt;'), replaceSubstitutionTransformer(/>/g, '&gt;'), replaceSubstitutionTransformer(/\"/g, '&quot;'), replaceSubstitutionTransformer(/'/g, '&#x27;'), replaceSubstitutionTransformer(/`/g, '&#x60;'));\nexport default safeHtml;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLine = new TemplateTag(replaceResultTransformer(/(?:\\n(?:\\s*))+/g, ' '), trimResultTransformer);\nexport default oneLine;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineTrim = new TemplateTag(replaceResultTransformer(/(?:\\n\\s*)/g, ''), trimResultTransformer);\nexport default oneLineTrim;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsOr;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar inlineLists = new TemplateTag(inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default inlineLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineInlineLists = new TemplateTag(inlineArrayTransformer, replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineInlineLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndent = new TemplateTag(stripIndentTransformer, trimResultTransformer);\nexport default stripIndent;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndents = new TemplateTag(stripIndentTransformer('all'), trimResultTransformer);\nexport default stripIndents;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneNode = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar nodeTypes = new Map([[\"tag\"\n/* Tag */\n, 1], [\"script\"\n/* Script */\n, 1], [\"style\"\n/* Style */\n, 1], [\"directive\"\n/* Directive */\n, 1], [\"text\"\n/* Text */\n, 3], [\"cdata\"\n/* CDATA */\n, 4], [\"comment\"\n/* Comment */\n, 8], [\"root\"\n/* Root */\n, 9]]);\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\n\nvar Node =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param type The type of the node.\n   */\n  function Node(type) {\n    this.type = type;\n    /** Parent of the node */\n\n    this.parent = null;\n    /** Previous sibling */\n\n    this.prev = null;\n    /** Next sibling */\n\n    this.next = null;\n    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n\n    this.startIndex = null;\n    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n\n    this.endIndex = null;\n  }\n\n  Object.defineProperty(Node.prototype, \"nodeType\", {\n    // Read-only aliases\n    get: function get() {\n      var _a;\n\n      return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"parentNode\", {\n    // Read-write aliases for properties\n    get: function get() {\n      return this.parent;\n    },\n    set: function set(parent) {\n      this.parent = parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"previousSibling\", {\n    get: function get() {\n      return this.prev;\n    },\n    set: function set(prev) {\n      this.prev = prev;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"nextSibling\", {\n    get: function get() {\n      return this.next;\n    },\n    set: function set(next) {\n      this.next = next;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Clone this node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n\n  Node.prototype.cloneNode = function (recursive) {\n    if (recursive === void 0) {\n      recursive = false;\n    }\n\n    return cloneNode(this, recursive);\n  };\n\n  return Node;\n}();\n\nexports.Node = Node;\n\nvar DataNode =\n/** @class */\nfunction (_super) {\n  __extends(DataNode, _super);\n  /**\n   * @param type The type of the node\n   * @param data The content of the data node\n   */\n\n\n  function DataNode(type, data) {\n    var _this = _super.call(this, type) || this;\n\n    _this.data = data;\n    return _this;\n  }\n\n  Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n    get: function get() {\n      return this.data;\n    },\n    set: function set(data) {\n      this.data = data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataNode;\n}(Node);\n\nexports.DataNode = DataNode;\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text(data) {\n    return _super.call(this, \"text\"\n    /* Text */\n    , data) || this;\n  }\n\n  return Text;\n}(DataNode);\n\nexports.Text = Text;\n\nvar Comment =\n/** @class */\nfunction (_super) {\n  __extends(Comment, _super);\n\n  function Comment(data) {\n    return _super.call(this, \"comment\"\n    /* Comment */\n    , data) || this;\n  }\n\n  return Comment;\n}(DataNode);\n\nexports.Comment = Comment;\n\nvar ProcessingInstruction =\n/** @class */\nfunction (_super) {\n  __extends(ProcessingInstruction, _super);\n\n  function ProcessingInstruction(name, data) {\n    var _this = _super.call(this, \"directive\"\n    /* Directive */\n    , data) || this;\n\n    _this.name = name;\n    return _this;\n  }\n\n  return ProcessingInstruction;\n}(DataNode);\n\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\n\nvar NodeWithChildren =\n/** @class */\nfunction (_super) {\n  __extends(NodeWithChildren, _super);\n  /**\n   * @param type Type of the node.\n   * @param children Children of the node. Only certain node types can have children.\n   */\n\n\n  function NodeWithChildren(type, children) {\n    var _this = _super.call(this, type) || this;\n\n    _this.children = children;\n    return _this;\n  }\n\n  Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n    // Aliases\n    get: function get() {\n      var _a;\n\n      return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n    get: function get() {\n      return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n    get: function get() {\n      return this.children;\n    },\n    set: function set(children) {\n      this.children = children;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return NodeWithChildren;\n}(Node);\n\nexports.NodeWithChildren = NodeWithChildren;\n\nvar Document =\n/** @class */\nfunction (_super) {\n  __extends(Document, _super);\n\n  function Document(children) {\n    return _super.call(this, \"root\"\n    /* Root */\n    , children) || this;\n  }\n\n  return Document;\n}(NodeWithChildren);\n\nexports.Document = Document;\n\nvar Element =\n/** @class */\nfunction (_super) {\n  __extends(Element, _super);\n  /**\n   * @param name Name of the tag, eg. `div`, `span`.\n   * @param attribs Object mapping attribute names to attribute values.\n   * @param children Children of the node.\n   */\n\n\n  function Element(name, attribs, children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    var _this = _super.call(this, name === \"script\" ? \"script\"\n    /* Script */\n    : name === \"style\" ? \"style\"\n    /* Style */\n    : \"tag\"\n    /* Tag */\n    , children) || this;\n\n    _this.name = name;\n    _this.attribs = attribs;\n    _this.attribs = attribs;\n    return _this;\n  }\n\n  Object.defineProperty(Element.prototype, \"tagName\", {\n    // DOM Level 1 aliases\n    get: function get() {\n      return this.name;\n    },\n    set: function set(name) {\n      this.name = name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Element.prototype, \"attributes\", {\n    get: function get() {\n      var _this = this;\n\n      return Object.keys(this.attribs).map(function (name) {\n        var _a, _b;\n\n        return {\n          name: name,\n          value: _this.attribs[name],\n          namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n          prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n        };\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Element;\n}(NodeWithChildren);\n\nexports.Element = Element;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\n\nfunction cloneNode(node, recursive) {\n  if (recursive === void 0) {\n    recursive = false;\n  }\n\n  var result;\n\n  switch (node.type) {\n    case \"text\"\n    /* Text */\n    :\n      result = new Text(node.data);\n      break;\n\n    case \"directive\"\n    /* Directive */\n    :\n      {\n        var instr = node;\n        result = new ProcessingInstruction(instr.name, instr.data);\n\n        if (instr[\"x-name\"] != null) {\n          result[\"x-name\"] = instr[\"x-name\"];\n          result[\"x-publicId\"] = instr[\"x-publicId\"];\n          result[\"x-systemId\"] = instr[\"x-systemId\"];\n        }\n\n        break;\n      }\n\n    case \"comment\"\n    /* Comment */\n    :\n      result = new Comment(node.data);\n      break;\n\n    case \"tag\"\n    /* Tag */\n    :\n    case \"script\"\n    /* Script */\n    :\n    case \"style\"\n    /* Style */\n    :\n      {\n        var elem = node;\n        var children = recursive ? cloneChildren(elem.children) : [];\n        var clone_1 = new Element(elem.name, __assign({}, elem.attribs), children);\n        children.forEach(function (child) {\n          return child.parent = clone_1;\n        });\n\n        if (elem[\"x-attribsNamespace\"]) {\n          clone_1[\"x-attribsNamespace\"] = __assign({}, elem[\"x-attribsNamespace\"]);\n        }\n\n        if (elem[\"x-attribsPrefix\"]) {\n          clone_1[\"x-attribsPrefix\"] = __assign({}, elem[\"x-attribsPrefix\"]);\n        }\n\n        result = clone_1;\n        break;\n      }\n\n    case \"cdata\"\n    /* CDATA */\n    :\n      {\n        var cdata = node;\n        var children = recursive ? cloneChildren(cdata.children) : [];\n        var clone_2 = new NodeWithChildren(node.type, children);\n        children.forEach(function (child) {\n          return child.parent = clone_2;\n        });\n        result = clone_2;\n        break;\n      }\n\n    case \"root\"\n    /* Root */\n    :\n      {\n        var doc = node;\n        var children = recursive ? cloneChildren(doc.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) {\n          return child.parent = clone_3;\n        });\n\n        if (doc[\"x-mode\"]) {\n          clone_3[\"x-mode\"] = doc[\"x-mode\"];\n        }\n\n        result = clone_3;\n        break;\n      }\n\n    case \"doctype\"\n    /* Doctype */\n    :\n      {\n        // This type isn't used yet.\n        throw new Error(\"Not implemented yet: ElementType.Doctype case\");\n      }\n  }\n\n  result.startIndex = node.startIndex;\n  result.endIndex = node.endIndex;\n  return result;\n}\n\nexports.cloneNode = cloneNode;\n\nfunction cloneChildren(childs) {\n  var children = childs.map(function (child) {\n    return cloneNode(child, true);\n  });\n\n  for (var i = 1; i < children.length; i++) {\n    children[i].prev = children[i - 1];\n    children[i - 1].next = children[i];\n  }\n\n  return children;\n}","/**\n * SVG elements are case-sensitive.\n *\n * @see {@link https://developer.mozilla.org/docs/Web/SVG/Element#SVG_elements_A_to_Z}\n */\nvar CASE_SENSITIVE_TAG_NAMES = ['animateMotion', 'animateTransform', 'clipPath', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussainBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'foreignObject', 'linearGradient', 'radialGradient', 'textPath'];\nmodule.exports = {\n  CASE_SENSITIVE_TAG_NAMES: CASE_SENSITIVE_TAG_NAMES\n};","// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\n\nvar HEAD_TAG_REGEX = /<head.*>/i;\nvar BODY_TAG_REGEX = /<body.*>/i; // falls back to `parseFromString` if `createHTMLDocument` cannot be used\n\nvar parseFromDocument = function parseFromDocument() {\n  throw new Error('This browser does not support `document.implementation.createHTMLDocument`');\n};\n\nvar parseFromString = function parseFromString() {\n  throw new Error('This browser does not support `DOMParser.prototype.parseFromString`');\n};\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\n\n\nif (typeof window.DOMParser === 'function') {\n  var domParser = new window.DOMParser();\n  var mimeType = 'text/html';\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n\n  parseFromString = function parseFromString(html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n\n  parseFromDocument = parseFromString;\n}\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\n\n\nif (document.implementation) {\n  var isIE = require('./utilities').isIE; // title parameter is required in IE\n  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx\n\n\n  var doc = document.implementation.createHTMLDocument(isIE() ? 'html-dom-parser' : undefined);\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n\n  parseFromDocument = function parseFromDocument(html, tagName) {\n    if (tagName) {\n      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;\n      return doc;\n    }\n\n    doc.documentElement.innerHTML = html;\n    return doc;\n  };\n}\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\n\n\nvar template = document.createElement('template');\nvar parseFromTemplate;\n\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function parseFromTemplate(html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string}   html - HTML markup.\n * @return {NodeList}\n */\n\n\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n\n  var doc;\n  var element;\n  var elements;\n\n  switch (firstTagName) {\n    case HTML:\n      doc = parseFromString(html); // the created document may come with filler head/body elements,\n      // so make sure to remove them if they don't actually exist\n\n      if (!HEAD_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(HEAD)[0];\n\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      if (!BODY_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(BODY)[0];\n\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      return doc.getElementsByTagName(HTML);\n\n    case HEAD:\n    case BODY:\n      elements = parseFromDocument(html).getElementsByTagName(firstTagName); // if there's a sibling element, then return both elements\n\n      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n        return elements[0].parentNode.childNodes;\n      }\n\n      return elements;\n    // low-level tag or text\n\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n\n      return parseFromDocument(html, BODY).getElementsByTagName(BODY)[0].childNodes;\n  }\n}\n\nmodule.exports = domparser;","var domparser = require('./domparser');\n\nvar formatDOM = require('./utilities').formatDOM;\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param  {string} html  - HTML markup.\n * @return {DomElement[]} - DOM elements.\n */\n\nfunction HTMLDOMParser(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  } // match directive\n\n\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = HTMLDOMParser;","var constants = require('./constants');\n\nvar domhandler = require('domhandler/lib/node');\n\nvar CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;\nvar Comment = domhandler.Comment;\nvar Element = domhandler.Element;\nvar ProcessingInstruction = domhandler.ProcessingInstruction;\nvar Text = domhandler.Text;\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\n\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {string}           tagName - Tag name in lowercase.\n * @return {string|undefined}         - Case-sensitive tag name.\n */\n\n\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - List of attributes.\n * @return {object}                  - Map of attribute name to value.\n */\n\n\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute; // `NamedNodeMap` is array-like\n\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n\n  return result;\n}\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {string} tagName - Lowercase tag name.\n * @return {string}         - Formatted tag name.\n */\n\n\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n\n  return tagName;\n}\n/**\n * Transforms DOM nodes to `domhandler` nodes.\n *\n * @param  {NodeList}     nodes         - DOM nodes.\n * @param  {Element|null} [parent=null] - Parent node.\n * @param  {string}       [directive]   - Directive.\n * @return {Array<Comment|Element|ProcessingInstruction|Text>}\n */\n\n\nfunction formatDOM(nodes, parent, directive) {\n  parent = parent || null;\n  var result = [];\n\n  for (var index = 0, len = nodes.length; index < len; index++) {\n    var node = nodes[index];\n    var current; // set the node data given the type\n\n    switch (node.nodeType) {\n      case 1:\n        // script, style, or tag\n        current = new Element(formatTagName(node.nodeName), formatAttributes(node.attributes));\n        current.children = formatDOM(node.childNodes, current);\n        break;\n\n      case 3:\n        current = new Text(node.nodeValue);\n        break;\n\n      case 8:\n        current = new Comment(node.nodeValue);\n        break;\n\n      default:\n        continue;\n    } // set previous node next\n\n\n    var prev = result[index - 1] || null;\n\n    if (prev) {\n      prev.next = current;\n    } // set properties for current node\n\n\n    current.parent = parent;\n    current.prev = prev;\n    current.next = null;\n    result.push(current);\n  }\n\n  if (directive) {\n    current = new ProcessingInstruction(directive.substring(0, directive.indexOf(' ')).toLowerCase(), directive);\n    current.next = result[0] || null;\n    current.parent = parent;\n    result.unshift(current);\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n/**\n * Detects if browser is Internet Explorer.\n *\n * @return {boolean} - Whether IE is detected.\n */\n\n\nfunction isIE() {\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\n\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};","var domToReact = require('./lib/dom-to-react');\n\nvar attributesToProps = require('./lib/attributes-to-props');\n\nvar htmlToDOM = require('html-dom-parser');\n\nvar domParserOptions = {\n  lowerCaseAttributeNames: false\n};\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - HTML string.\n * @param  {Object}   [options]               - Parser options.\n * @param  {Object}   [options.htmlparser2]   - htmlparser2 options.\n * @param  {Object}   [options.library]       - Library for React, Preact, etc.\n * @param  {Function} [options.replace]       - Replace method.\n * @return {JSX.Element|JSX.Element[]|String} - React element(s), empty array, or string.\n */\n\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  options = options || {};\n  return domToReact(htmlToDOM(html, options.htmlparser2 || domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps; // support CommonJS and ES Modules\n\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;","var reactProperty = require('react-property');\n\nvar utilities = require('./utilities');\n\nvar setStyleProp = utilities.setStyleProp;\nvar htmlProperties = reactProperty.html;\nvar svgProperties = reactProperty.svg;\nvar isCustomAttribute = reactProperty.isCustomAttribute;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param  {object} [attributes={}] - HTML/SVG DOM attributes.\n * @return {object}                 - React props.\n */\n\nfunction attributesToProps(attributes) {\n  attributes = attributes || {};\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var property;\n  var props = {};\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName]; // ARIA (aria-*) or custom data (data-*) attribute\n\n    if (isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    } // convert HTML attribute to React prop\n\n\n    attributeNameLowerCased = attributeName.toLowerCase();\n\n    if (hasOwnProperty.call(htmlProperties, attributeNameLowerCased)) {\n      property = htmlProperties[attributeNameLowerCased];\n      props[property.propertyName] = property.hasBooleanValue || property.hasOverloadedBooleanValue && !attributeValue ? true : attributeValue;\n      continue;\n    } // convert SVG attribute to React prop\n\n\n    if (hasOwnProperty.call(svgProperties, attributeName)) {\n      property = svgProperties[attributeName];\n      props[property.propertyName] = attributeValue;\n      continue;\n    } // preserve custom attribute if React >=16\n\n\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  } // transform inline style to object\n\n\n  setStyleProp(attributes.style, props);\n  return props;\n}\n\nmodule.exports = attributesToProps;","var React = require('react');\n\nvar attributesToProps = require('./attributes-to-props');\n\nvar utilities = require('./utilities');\n\nvar setStyleProp = utilities.setStyleProp;\n/**\n * Converts DOM nodes to JSX element(s).\n *\n * @param  {DomElement[]} nodes             - DOM nodes.\n * @param  {object}       [options={}]      - Options.\n * @param  {Function}     [options.replace] - Replacer.\n * @param  {object}       [options.library] - Library (React/Preact/etc.).\n * @return {string|JSX.Element|JSX.Element[]}\n */\n\nfunction domToReact(nodes, options) {\n  options = options || {};\n  var library = options.library || React;\n  var cloneElement = library.cloneElement;\n  var createElement = library.createElement;\n  var isValidElement = library.isValidElement;\n  var result = [];\n  var node;\n  var hasReplace = typeof options.replace === 'function';\n  var replaceElement;\n  var props;\n  var children;\n  var data;\n  var trim = options.trim;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i]; // replace with custom React element (if present)\n\n    if (hasReplace) {\n      replaceElement = options.replace(node);\n\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://fb.me/react-warning-keys\n        if (len > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || i\n          });\n        }\n\n        result.push(replaceElement);\n        continue;\n      }\n    }\n\n    if (node.type === 'text') {\n      // if trim option is enabled, skip whitespace text nodes\n      if (trim) {\n        data = node.data.trim();\n\n        if (data) {\n          result.push(node.data);\n        }\n      } else {\n        result.push(node.data);\n      }\n\n      continue;\n    }\n\n    props = node.attribs;\n\n    if (skipAttributesToProps(node)) {\n      setStyleProp(props.style, props);\n    } else if (props) {\n      props = attributesToProps(props);\n    }\n\n    children = null;\n\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: node.children[0].data\n          };\n        }\n\n        break;\n\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = node.children[0].data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children, options);\n        }\n\n        break;\n      // skip all other cases (e.g., comment)\n\n      default:\n        continue;\n    } // set \"key\" prop for sibling elements\n    // https://fb.me/react-warning-keys\n\n\n    if (len > 1) {\n      props.key = i;\n    }\n\n    result.push(createElement(node.name, props, children));\n  }\n\n  return result.length === 1 ? result[0] : result;\n}\n/**\n * Determines whether DOM element attributes should be transformed to props.\n * Web Components should not have their attributes transformed except for `style`.\n *\n * @param  {DomElement} node\n * @return {boolean}\n */\n\n\nfunction skipAttributesToProps(node) {\n  return utilities.PRESERVE_CUSTOM_ATTRIBUTES && node.type === 'tag' && utilities.isCustomComponent(node.name, node.attribs);\n}\n\nmodule.exports = domToReact;","var React = require('react');\n\nvar styleToJS = require('style-to-js').default;\n/**\n * Swap key with value in an object.\n *\n * @param  {Object}   obj        - The object.\n * @param  {Function} [override] - The override method.\n * @return {Object}              - The inverted object.\n */\n\n\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n\n  for (key in obj) {\n    value = obj[key];\n\n    if (isOverridePresent) {\n      overrides = override(key, value);\n\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n\n  return result;\n}\n/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {Object} props   - The props being passed to the element.\n * @return {boolean}\n */\n\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nvar styleToJSOptions = {\n  reactCompat: true\n};\n/**\n * Sets style prop.\n *\n * @param {null|undefined|string} style\n * @param {object} props\n */\n\nfunction setStyleProp(style, props) {\n  if (style === null || style === undefined) {\n    return;\n  }\n\n  props.style = styleToJS(style, styleToJSOptions);\n}\n/**\n * @constant {boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */\n\n\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent,\n  setStyleProp: setStyleProp\n};","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/; // declaration\n\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/; // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\n\nvar TRIM_REGEX = /^\\s+|\\s+$/g; // strings\n\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = ''; // types\n\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\n\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n  options = options || {};\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n\n\n  function position() {\n    var start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n\n\n  function Position(start) {\n    this.start = start;\n    this.end = {\n      line: lineno,\n      column: column\n    };\n    this.source = options.source;\n  }\n  /**\n   * Non-enumerable source string.\n   */\n\n\n  Position.prototype.content = style;\n  var errorsList = [];\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n\n\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n  /**\n   * Parse whitespace.\n   */\n\n\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n\n    return rules;\n  }\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n\n\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n    var i = 2;\n\n    while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {\n      ++i;\n    }\n\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n\n\n  function declaration() {\n    var pos = position(); // prop\n\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment(); // :\n\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\"); // val\n\n    var val = match(VALUE_REGEX);\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING\n    }); // ;\n\n    match(SEMICOLON_REGEX);\n    return ret;\n  }\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n\n\n  function declarations() {\n    var decls = [];\n    comments(decls); // declarations\n\n    var decl;\n\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\n\n\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}","var HTMLDOMPropertyConfig = require('./lib/HTMLDOMPropertyConfig');\n\nvar SVGDOMPropertyConfig = require('./lib/SVGDOMPropertyConfig');\n\nvar injection = require('./lib/injection');\n\nvar MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n/**\n * @see https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/DOMProperty.js#L14-L16\n *\n * @param  {Number}  value\n * @param  {Number}  bitmask\n * @return {Boolean}\n */\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n/**\n * @see https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/DOMProperty.js#L57\n *\n * @param {Object}  domPropertyConfig - HTMLDOMPropertyConfig or SVGDOMPropertyConfig\n * @param {Object}  config            - The object to be mutated\n * @param {Boolean} isSVG             - Whether the injected config is HTML or SVG (it assumes the default is HTML)\n */\n\n\nfunction injectDOMPropertyConfig(domPropertyConfig, config, isSVG) {\n  var Properties = domPropertyConfig.Properties;\n  var DOMAttributeNames = domPropertyConfig.DOMAttributeNames;\n  var attributeName;\n  var propertyName;\n  var propConfig;\n\n  for (propertyName in Properties) {\n    attributeName = DOMAttributeNames[propertyName] || (isSVG ? propertyName : propertyName.toLowerCase());\n    propConfig = Properties[propertyName];\n    config[attributeName] = {\n      attributeName: attributeName,\n      propertyName: propertyName,\n      mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n      hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n      hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n      hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n      hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n    };\n  }\n}\n/**\n * HTML properties config.\n *\n * @type {Object}\n */\n\n\nvar html = {};\ninjectDOMPropertyConfig(HTMLDOMPropertyConfig, html);\n/**\n * SVG properties config.\n *\n * @type {Object}\n */\n\nvar svg = {};\ninjectDOMPropertyConfig(SVGDOMPropertyConfig, svg, true);\n/**\n * HTML and SVG properties config.\n *\n * @type {Object}\n */\n\nvar properties = {};\ninjectDOMPropertyConfig(HTMLDOMPropertyConfig, properties);\ninjectDOMPropertyConfig(SVGDOMPropertyConfig, properties, true);\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nmodule.exports = {\n  html: html,\n  svg: svg,\n  properties: properties,\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   *\n   * @see https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/HTMLDOMPropertyConfig.js#L23-L25\n   *\n   * @param {String}\n   * @return {Boolean}\n   */\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'))\n};","module.exports = {\n  Properties: {\n    autoFocus: 4,\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: 4,\n    allowTransparency: 0,\n    alt: 0,\n    as: 0,\n    async: 4,\n    autoComplete: 0,\n    autoPlay: 4,\n    capture: 4,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: 5,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: 24,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: 4,\n    controlsList: 0,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0,\n    dateTime: 0,\n    default: 4,\n    defer: 4,\n    dir: 0,\n    disabled: 4,\n    download: 32,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: 4,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: 4,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: 4,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    multiple: 5,\n    muted: 5,\n    name: 0,\n    nonce: 0,\n    noValidate: 4,\n    open: 4,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: 4,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: 4,\n    referrerPolicy: 0,\n    rel: 0,\n    required: 4,\n    reversed: 4,\n    role: 0,\n    rows: 24,\n    rowSpan: 8,\n    sandbox: 0,\n    scope: 0,\n    scoped: 4,\n    scrolling: 0,\n    seamless: 4,\n    selected: 5,\n    shape: 0,\n    size: 24,\n    sizes: 0,\n    span: 24,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: 8,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    property: 0,\n    resource: 0,\n    typeof: 0,\n    vocab: 0,\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    autoSave: 0,\n    color: 0,\n    itemProp: 0,\n    itemScope: 4,\n    itemType: 0,\n    itemID: 0,\n    itemRef: 0,\n    results: 0,\n    security: 0,\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  }\n};","module.exports = {\n  Properties: {\n    accentHeight: 0,\n    accumulate: 0,\n    additive: 0,\n    alignmentBaseline: 0,\n    allowReorder: 0,\n    alphabetic: 0,\n    amplitude: 0,\n    arabicForm: 0,\n    ascent: 0,\n    attributeName: 0,\n    attributeType: 0,\n    autoReverse: 0,\n    azimuth: 0,\n    baseFrequency: 0,\n    baseProfile: 0,\n    baselineShift: 0,\n    bbox: 0,\n    begin: 0,\n    bias: 0,\n    by: 0,\n    calcMode: 0,\n    capHeight: 0,\n    clip: 0,\n    clipPath: 0,\n    clipRule: 0,\n    clipPathUnits: 0,\n    colorInterpolation: 0,\n    colorInterpolationFilters: 0,\n    colorProfile: 0,\n    colorRendering: 0,\n    contentScriptType: 0,\n    contentStyleType: 0,\n    cursor: 0,\n    cx: 0,\n    cy: 0,\n    d: 0,\n    decelerate: 0,\n    descent: 0,\n    diffuseConstant: 0,\n    direction: 0,\n    display: 0,\n    divisor: 0,\n    dominantBaseline: 0,\n    dur: 0,\n    dx: 0,\n    dy: 0,\n    edgeMode: 0,\n    elevation: 0,\n    enableBackground: 0,\n    end: 0,\n    exponent: 0,\n    externalResourcesRequired: 0,\n    fill: 0,\n    fillOpacity: 0,\n    fillRule: 0,\n    filter: 0,\n    filterRes: 0,\n    filterUnits: 0,\n    floodColor: 0,\n    floodOpacity: 0,\n    focusable: 0,\n    fontFamily: 0,\n    fontSize: 0,\n    fontSizeAdjust: 0,\n    fontStretch: 0,\n    fontStyle: 0,\n    fontVariant: 0,\n    fontWeight: 0,\n    format: 0,\n    from: 0,\n    fx: 0,\n    fy: 0,\n    g1: 0,\n    g2: 0,\n    glyphName: 0,\n    glyphOrientationHorizontal: 0,\n    glyphOrientationVertical: 0,\n    glyphRef: 0,\n    gradientTransform: 0,\n    gradientUnits: 0,\n    hanging: 0,\n    horizAdvX: 0,\n    horizOriginX: 0,\n    ideographic: 0,\n    imageRendering: 0,\n    in: 0,\n    in2: 0,\n    intercept: 0,\n    k: 0,\n    k1: 0,\n    k2: 0,\n    k3: 0,\n    k4: 0,\n    kernelMatrix: 0,\n    kernelUnitLength: 0,\n    kerning: 0,\n    keyPoints: 0,\n    keySplines: 0,\n    keyTimes: 0,\n    lengthAdjust: 0,\n    letterSpacing: 0,\n    lightingColor: 0,\n    limitingConeAngle: 0,\n    local: 0,\n    markerEnd: 0,\n    markerMid: 0,\n    markerStart: 0,\n    markerHeight: 0,\n    markerUnits: 0,\n    markerWidth: 0,\n    mask: 0,\n    maskContentUnits: 0,\n    maskUnits: 0,\n    mathematical: 0,\n    mode: 0,\n    numOctaves: 0,\n    offset: 0,\n    opacity: 0,\n    operator: 0,\n    order: 0,\n    orient: 0,\n    orientation: 0,\n    origin: 0,\n    overflow: 0,\n    overlinePosition: 0,\n    overlineThickness: 0,\n    paintOrder: 0,\n    panose1: 0,\n    pathLength: 0,\n    patternContentUnits: 0,\n    patternTransform: 0,\n    patternUnits: 0,\n    pointerEvents: 0,\n    points: 0,\n    pointsAtX: 0,\n    pointsAtY: 0,\n    pointsAtZ: 0,\n    preserveAlpha: 0,\n    preserveAspectRatio: 0,\n    primitiveUnits: 0,\n    r: 0,\n    radius: 0,\n    refX: 0,\n    refY: 0,\n    renderingIntent: 0,\n    repeatCount: 0,\n    repeatDur: 0,\n    requiredExtensions: 0,\n    requiredFeatures: 0,\n    restart: 0,\n    result: 0,\n    rotate: 0,\n    rx: 0,\n    ry: 0,\n    scale: 0,\n    seed: 0,\n    shapeRendering: 0,\n    slope: 0,\n    spacing: 0,\n    specularConstant: 0,\n    specularExponent: 0,\n    speed: 0,\n    spreadMethod: 0,\n    startOffset: 0,\n    stdDeviation: 0,\n    stemh: 0,\n    stemv: 0,\n    stitchTiles: 0,\n    stopColor: 0,\n    stopOpacity: 0,\n    strikethroughPosition: 0,\n    strikethroughThickness: 0,\n    string: 0,\n    stroke: 0,\n    strokeDasharray: 0,\n    strokeDashoffset: 0,\n    strokeLinecap: 0,\n    strokeLinejoin: 0,\n    strokeMiterlimit: 0,\n    strokeOpacity: 0,\n    strokeWidth: 0,\n    surfaceScale: 0,\n    systemLanguage: 0,\n    tableValues: 0,\n    targetX: 0,\n    targetY: 0,\n    textAnchor: 0,\n    textDecoration: 0,\n    textRendering: 0,\n    textLength: 0,\n    to: 0,\n    transform: 0,\n    u1: 0,\n    u2: 0,\n    underlinePosition: 0,\n    underlineThickness: 0,\n    unicode: 0,\n    unicodeBidi: 0,\n    unicodeRange: 0,\n    unitsPerEm: 0,\n    vAlphabetic: 0,\n    vHanging: 0,\n    vIdeographic: 0,\n    vMathematical: 0,\n    values: 0,\n    vectorEffect: 0,\n    version: 0,\n    vertAdvY: 0,\n    vertOriginX: 0,\n    vertOriginY: 0,\n    viewBox: 0,\n    viewTarget: 0,\n    visibility: 0,\n    widths: 0,\n    wordSpacing: 0,\n    writingMode: 0,\n    x: 0,\n    xHeight: 0,\n    x1: 0,\n    x2: 0,\n    xChannelSelector: 0,\n    xlinkActuate: 0,\n    xlinkArcrole: 0,\n    xlinkHref: 0,\n    xlinkRole: 0,\n    xlinkShow: 0,\n    xlinkTitle: 0,\n    xlinkType: 0,\n    xmlBase: 0,\n    xmlns: 0,\n    xmlnsXlink: 0,\n    xmlLang: 0,\n    xmlSpace: 0,\n    y: 0,\n    y1: 0,\n    y2: 0,\n    yChannelSelector: 0,\n    z: 0,\n    zoomAndPan: 0\n  },\n  DOMAttributeNames: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDasharray: 'stroke-dasharray',\n    strokeDashoffset: 'stroke-dashoffset',\n    strokeLinecap: 'stroke-linecap',\n    strokeLinejoin: 'stroke-linejoin',\n    strokeMiterlimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    xlinkActuate: 'xlink:actuate',\n    xlinkArcrole: 'xlink:arcrole',\n    xlinkHref: 'xlink:href',\n    xlinkRole: 'xlink:role',\n    xlinkShow: 'xlink:show',\n    xlinkTitle: 'xlink:title',\n    xlinkType: 'xlink:type',\n    xmlBase: 'xml:base',\n    xmlnsXlink: 'xmlns:xlink',\n    xmlLang: 'xml:lang',\n    xmlSpace: 'xml:space'\n  }\n};","module.exports = {\n  MUST_USE_PROPERTY: 1,\n  HAS_BOOLEAN_VALUE: 4,\n  HAS_NUMERIC_VALUE: 8,\n  HAS_POSITIVE_NUMERIC_VALUE: 24,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 32\n};","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\n\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\n\nvar utilities_1 = require(\"./utilities\");\n\nfunction StyleToJS(style, options) {\n  var output = {};\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  style_to_object_1[\"default\"](style, function (property, value) {\n    if (property && value) {\n      output[utilities_1.camelCase(property, options)] = value;\n    }\n  });\n  return output;\n}\n\nexports[\"default\"] = StyleToJS;","\"use strict\";\n\nexports.__esModule = true;\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\n\nvar skipCamelCase = function skipCamelCase(property) {\n  return !property || NO_HYPHEN_REGEX.test(property) || CUSTOM_PROPERTY_REGEX.test(property);\n};\n\nvar capitalize = function capitalize(match, character) {\n  return character.toUpperCase();\n};\n\nvar trimHyphen = function trimHyphen(match, prefix) {\n  return prefix + \"-\";\n};\n\nvar camelCase = function camelCase(property, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (!options.reactCompat) {\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n\nexports.camelCase = camelCase;","var parse = require('inline-style-parser');\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\n\n\nfunction StyleToObject(style, iterator) {\n  var output = null;\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320,\n  654,\n  768,\n  1024,\n  1366,\n  1600,\n  1920,\n  2048,\n  2560,\n  3440,\n  3840,\n  4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> = function LayoutWrapper({\n  children,\n  ...props\n}) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {\n        // eslint-disable-next-line no-undef\n        SERVER && <NativeScriptLoading />\n      }\n    </Fragment>\n  )\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> = function Placeholder({\n  fallback,\n  ...props\n}) {\n  if (fallback) {\n    return (\n      <Picture\n        {...props}\n        fallback={{\n          src: fallback,\n        }}\n        aria-hidden\n        alt=\"\"\n      />\n    )\n  } else {\n    return <div {...props}></div>\n  }\n}\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = function GatsbyImage({\n  as,\n  className,\n  class: preactClass,\n  style,\n  image,\n  loading = `lazy`,\n  imgClassName,\n  imgStyle,\n  backgroundColor,\n  objectFit,\n  objectPosition,\n  ...props\n}) {\n  if (!image) {\n    console.warn(`[gatsby-plugin-image] Missing image prop`)\n    return null\n  }\n  if (preactClass) {\n    className = preactClass\n  }\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: placeholderBackgroundColor,\n  } = image\n\n  const { style: wStyle, className: wClass, ...wrapperProps } = getWrapperProps(\n    width,\n    height,\n    layout\n  )\n\n  const cleanedImages: IGatsbyImageData[\"images\"] = {\n    fallback: undefined,\n    sources: [],\n  }\n  if (images.fallback) {\n    cleanedImages.fallback = {\n      ...images.fallback,\n      srcSet: images.fallback.srcSet\n        ? removeNewLines(images.fallback.srcSet)\n        : undefined,\n    }\n  }\n\n  if (images.sources) {\n    cleanedImages.sources = images.sources.map(source => {\n      return {\n        ...source,\n        srcSet: removeNewLines(source.srcSet),\n      }\n    })\n  }\n\n  return (\n    <GatsbyImageHydrator\n      {...wrapperProps}\n      as={as}\n      style={{\n        ...wStyle,\n        ...style,\n        backgroundColor,\n      }}\n      className={`${wClass}${className ? ` ${className}` : ``}`}\n    >\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            undefined,\n            undefined,\n            undefined,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    </GatsbyImageHydrator>\n  )\n}\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","/* eslint-disable no-unused-expressions */\nimport React, {\n  Component,\n  ElementType,\n  createRef,\n  MutableRefObject,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  RefObject,\n  CSSProperties,\n} from \"react\"\nimport {\n  getWrapperProps,\n  hasNativeLazyLoadSupport,\n  storeImageloaded,\n  hasImageLoaded,\n  gatsbyImageIsInstalled,\n} from \"./hooks\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport { Layout } from \"../image-utils\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport { Unobserver } from \"./intersection-observer\"\nimport { render } from \"react-dom\"\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: () => void\n  onError?: () => void\n  onStartLoad?: (props: { wasCached?: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nclass GatsbyImageHydrator extends Component<\n  GatsbyImageProps,\n  { isLoading: boolean; isLoaded: boolean }\n> {\n  root: RefObject<HTMLImageElement | undefined> = createRef<\n    HTMLImageElement | undefined\n  >()\n  hydrated: MutableRefObject<boolean> = { current: false }\n  forceRender: MutableRefObject<boolean> = {\n    // In dev we use render not hydrate, to avoid hydration warnings\n    current: process.env.NODE_ENV === `development`,\n  }\n  lazyHydrator: () => void | null = null\n  ref = createRef<HTMLImageElement>()\n  unobserveRef: Unobserver\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoading: hasNativeLazyLoadSupport(),\n      isLoaded: false,\n    }\n  }\n\n  _lazyHydrate(props, state): Promise<void> {\n    const hasSSRHtml = this.root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    )\n    // On first server hydration do nothing\n    if (hasNativeLazyLoadSupport() && hasSSRHtml && !this.hydrated.current) {\n      this.hydrated.current = true\n      return Promise.resolve()\n    }\n\n    return import(`./lazy-hydrate`).then(({ lazyHydrate }) => {\n      this.lazyHydrator = lazyHydrate(\n        {\n          image: props.image.images,\n          isLoading: state.isLoading,\n          isLoaded: state.isLoaded,\n          toggleIsLoaded: () => {\n            props.onLoad?.()\n\n            this.setState({\n              isLoaded: true,\n            })\n          },\n          ref: this.ref,\n          ...props,\n        },\n        this.root,\n        this.hydrated,\n        this.forceRender\n      )\n    })\n  }\n\n  /**\n   * Choose if setupIntersectionObserver should use the image cache or not.\n   */\n  _setupIntersectionObserver(useCache = true): void {\n    import(`./intersection-observer`).then(({ createIntersectionObserver }) => {\n      const intersectionObserver = createIntersectionObserver(() => {\n        if (this.root.current) {\n          const cacheKey = JSON.stringify(this.props.image.images)\n          this.props.onStartLoad?.({\n            wasCached: useCache && hasImageLoaded(cacheKey),\n          })\n          this.setState({\n            isLoading: true,\n            isLoaded: useCache && hasImageLoaded(cacheKey),\n          })\n        }\n      })\n\n      if (this.root.current) {\n        this.unobserveRef = intersectionObserver(this.root)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState): boolean {\n    let hasChanged = false\n    if (!this.state.isLoading && nextState.isLoading && !nextState.isLoaded) {\n      // Props have changed between SSR and hydration, so we need to force render instead of hydrate\n      this.forceRender.current = true\n    }\n    // this check mostly means people do not have the correct ref checks in place, we want to reset some state to suppport loading effects\n    if (this.props.image.images !== nextProps.image.images) {\n      // reset state, we'll rely on intersection observer to reload\n      if (this.unobserveRef) {\n        // unregister intersectionObserver\n        this.unobserveRef()\n\n        // // on unmount, make sure we cleanup\n        if (this.hydrated.current && this.lazyHydrator) {\n          render(null, this.root.current)\n        }\n      }\n\n      this.setState(\n        {\n          isLoading: false,\n          isLoaded: false,\n        },\n        () => {\n          this._setupIntersectionObserver(false)\n        }\n      )\n\n      hasChanged = true\n    }\n\n    if (this.root.current && !hasChanged) {\n      this._lazyHydrate(nextProps, nextState)\n    }\n\n    return false\n  }\n\n  componentDidMount(): void {\n    if (this.root.current) {\n      const ssrElement = this.root.current.querySelector(\n        `[data-gatsby-image-ssr]`\n      ) as HTMLImageElement\n      const cacheKey = JSON.stringify(this.props.image.images)\n\n      // when SSR and native lazyload is supported we'll do nothing ;)\n      if (\n        hasNativeLazyLoadSupport() &&\n        ssrElement &&\n        gatsbyImageIsInstalled()\n      ) {\n        this.props.onStartLoad?.({ wasCached: false })\n\n        // When the image is already loaded before we have hydrated, we trigger onLoad and cache the item\n        if (ssrElement.complete) {\n          this.props.onLoad?.()\n          storeImageloaded(cacheKey)\n        } else {\n          // We need the current class context (this) inside our named onLoad function\n          // The named function is necessary to easily remove the listener afterward.\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const _this = this\n          // add an onLoad to the image\n          ssrElement.addEventListener(`load`, function onLoad() {\n            ssrElement.removeEventListener(`load`, onLoad)\n\n            _this.props.onLoad?.()\n            storeImageloaded(cacheKey)\n          })\n        }\n\n        return\n      }\n\n      // Fallback to custom lazy loading (intersection observer)\n      this._setupIntersectionObserver(true)\n    }\n  }\n\n  componentWillUnmount(): void {\n    // Cleanup when onmount happens\n    if (this.unobserveRef) {\n      // unregister intersectionObserver\n      this.unobserveRef()\n\n      // on unmount, make sure we cleanup\n      if (this.hydrated.current && this.lazyHydrator) {\n        this.lazyHydrator()\n      }\n    }\n\n    return\n  }\n\n  render(): JSX.Element {\n    const Type = this.props.as || `div`\n    const { width, height, layout } = this.props.image\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    let className = this.props.className\n    // preact class\n    if (this.props.class) {\n      className = this.props.class\n    }\n\n    const sizer = getSizer(layout, width, height)\n\n    return (\n      <Type\n        {...wrapperProps}\n        style={{\n          ...wStyle,\n          ...this.props.style,\n          backgroundColor: this.props.backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n        ref={this.root}\n        dangerouslySetInnerHTML={{\n          __html: sizer,\n        }}\n        suppressHydrationWarning\n      />\n    )\n  }\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = function GatsbyImage(\n  props\n) {\n  if (!props.image) {\n    if (process.env.NODE_ENV === `development`) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n    }\n    return null\n  }\n\n  if (!gatsbyImageIsInstalled()) {\n    console.error(\n      `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n    )\n  }\n  const { className, class: classSafe, backgroundColor, image } = props\n  const { width, height, layout } = image\n  const propsKey = JSON.stringify([\n    width,\n    height,\n    layout,\n    className,\n    classSafe,\n    backgroundColor,\n  ])\n  return <GatsbyImageHydrator key={propsKey} {...props} />\n}\n\nGatsbyImage.propTypes = propTypes\n\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<\n  IStaticImageProps & IPrivateProps\n> = _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<\n  IStaticImageProps & IPrivateProps\n> = _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from 'react';\nimport { Link } from \"gatsby\";\n\nconst Button = ({ children, className, url }) => (\n  <Link to={url} className={`${className}`}>\n      {children}\n  </Link>\n);\n\nexport default Button;\n","import HTMLReactParser from './index.js';\nexport var domToReact = HTMLReactParser.domToReact;\nexport var htmlToDOM = HTMLReactParser.htmlToDOM;\nexport var attributesToProps = HTMLReactParser.attributesToProps;\nexport default HTMLReactParser;","import * as PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { graphql } from 'gatsby';\nimport parse from 'html-react-parser';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleRight, faLongArrowAltRight } from '@fortawesome/free-solid-svg-icons';\n\nclass Card extends React.Component {\n  static propTypes = {\n    card: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      image: PropTypes.object,\n    }).isRequired,\n  }\n\n  render() {\n    const { title, url, description, pills, image } = this.props.card;\n\n\n    var showPill;\n\n    if (pills !== null) {\n      showPill =\n      <ul className=\"pills\">\n        {pills.map((pill) => (\n          <li key={pill.id}>\n            <span className={\"pill \"+pill.color}>{pill.pill}</span>\n          </li>\n        ))}\n      </ul>\n      ;\n    } else {\n      showPill = '';\n    }\n\n    const lens = parse(description);\n\n    return (\n      <a\n        href={url}\n        className=\"card\"\n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n      >\n\n      <div className=\"card-context\">\n        <div className=\"card-image-outer-wrapper\">\n          <GatsbyImage\n            image={image.childImageSharp.gatsbyImageData}\n            alt=\"\"\n            className=\"card-image\" />\n        </div>\n        <div className=\"card-context--feedback\"><FontAwesomeIcon icon={faChevronCircleRight} size=\"4x\" /></div>\n        {showPill}\n      </div>\n\n      <div className=\"card-lens\">\n        <h2>\n          {title}\n        </h2>\n        <p>\n          {lens}\n          <FontAwesomeIcon icon={faLongArrowAltRight} />\n        </p>\n      </div>\n\n    </a>\n    );\n  }\n}\n\nexport default Card\n\nexport const CardFragment = graphql`fragment Card_details on LinksJson {\n  links {\n    title\n    url\n    description\n    pills {\n      pill\n      color\n    }\n    image {\n      childImageSharp {\n        gatsbyImageData(width: 420, height: 220, placeholder: NONE, layout: CONSTRAINED)\n      }\n    }\n  }\n}\n`\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet'\nimport Card from \"../components/card\";\nimport Layout from \"../components/layout\";\nimport Hero from '../components/layout/hero';\nimport Breadcrumbs from '../components/layout/Breadcrumbs';\nimport Button from '../components/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCircle, fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faCircle, fab, fas);\n\nexport default function Template({data}) {\n  const {linksJson: pages} = data;\n  const {allLinksJson: categories} = data;\n\n  var desc;\n\n  if (pages.description !== null) {\n    desc = <p className=\"description\">{pages.description}</p>;\n  } else {\n    desc = '';\n  }\n\n  const url = `https://cryptoverted.github.io${pages.page}`;\n  const title = `${pages.title} | Bitcoin Resources - Cryptoverted`;\n\n  return (\n\n    <Layout>\n    <Helmet \n      title={ title }\n      meta={[\n        { name: 'description', content: `${pages.lead}` },\n        { name: 'og:title', content: title },\n        { name: 'twitter:title', content: title },\n        { name: 'og:description', content: `${pages.lead}` },\n        { name: 'twitter:description', content: `${pages.lead}` },\n        { name: 'og:url', content: url },\n      ]}\n      link={[\n        { rel: 'canonical', href: url },\n      ]}\n    >\n      <script data-goatcounter=\"https://cryptoverted.goatcounter.com/count\" async src=\"//gc.zgo.at/count.js\"></script>\n      <noscript>{`<img src=\"https://cryptoverted.goatcounter.com/count?p=${pages.page}\">`}</noscript>\n    </Helmet>\n    <div>\n      <Hero title={pages.title} />\n      <Breadcrumbs title={pages.title} />\n      <div className=\"main\">\n        <div className=\"contain\">\n        <div className=\"page-content\">\n        <p className=\"lead\">{pages.lead}</p>\n        {desc}\n          <ul className=\"wrapper\">\n            {pages.links.map((node, key) => (\n              <li key={key}>\n                <Card\n                card={node}\n                />\n              </li>\n            ))}\n          </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"main complimentary\">\n        <div className=\"contain\">\n          <div className=\"page-content\">\n            <p className=\"lead\">Continue exploring the Bitcoin resources.</p>\n            <ul className=\"wrapper\">\n              {categories.edges.map((node, i) => (\n                <li key={node.node.id}>\n                  <Button url={node.node.page} className=\"home-button-compact\">\n                    <FontAwesomeIcon icon={[node.node.iconPrefix, node.node.icon]} size=\"2x\" className=\"fa-fw\" />\n                    <div>\n                      <h2>{node.node.title}</h2>\n                      <p>{node.node.lead}</p>\n                    </div>\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    </Layout>\n  )\n};\n\nexport const pageQuery = graphql`\n  query PageByPath($path: String!) {\n    linksJson (page: {eq :$path}) {\n      page\n      title\n      lead\n      description\n      ...Card_details\n    }\n    allLinksJson {\n      edges {\n        node {\n          id\n          page\n          title\n          lead\n          icon\n          iconPrefix\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}